# -*- mode: ruby -*-
# vi: set ft=ruby :

# determines the recent version of a product
def get_recent_version(product)
    url = "https://releases.hashicorp.com/index.json"
    uri = URI.parse(url)
    response = Net::HTTP.get_response(uri)
    if response.code != "200"
      raise "Unable to automatically determine most recent version from #{url}"
    end
    hash = JSON.parse(response.body)
    # versions are listed from least to most recent by default
    # so I reverse the order and find the first version that doesn't
    # container a - or + character which are used for special releases
    hash[product]["versions"].keys.reverse.find { |v| !v["-"] && !v["+"] }
  end

  Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/bionic64"

    config.vm.box_check_update = true

    config.vm.network "forwarded_port", guest: 4646, host: 4646, host_ip: "127.0.0.1"
    config.vm.network "forwarded_port", guest: 4647, host: 4647, host_ip: "127.0.0.1"

    config.vm.synced_folder '.', '/vagrant', disabled: true

    config.vm.provider "virtualbox" do |vb|
      vb.gui    = false
      vb.cpus   = 2
      vb.memory = "4096" # 4GB
    end

    nomad_version = ENV["NOMAD_VERSION"] || get_recent_version("nomad")

    config.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y apt-transport-https unzip
      mkdir -p /tmp/build
      cd /tmp/build
      wget https://releases.hashicorp.com/nomad/#{nomad_version}/nomad_#{nomad_version}_linux_amd64.zip
      unzip -d /bin nomad_#{nomad_version}_linux_amd64.zip
      cd /tmp
      rm -rf /tmp/build
      nomad version

      adduser --disabled-password --gecos "" nomad
      usermod -aG nomad nomad

      mkdir -p /nomad/data && \
      mkdir -p /nomad/config && \
      chown -R nomad:nomad /nomad
      sudo touch /etc/systemd/system/nomad.service
    SHELL

    config.vm.provision "file", source: "./nomad.service", destination: "/tmp/nomad.service"
    config.vm.provision "file", source: "./agent.hcl", destination: "/tmp/agent.hcl"

    config.vm.provision "shell", inline: <<-SHELL
      sudo mv /tmp/agent.hcl /nomad/config/agent.hcl
      chown -R nomad:nomad /nomad

      sudo mv /tmp/nomad.service /etc/systemd/system/nomad.service
      sudo systemctl daemon-reload
      sudo systemctl enable nomad
      sudo systemctl start nomad
      sudo systemctl status nomad
    SHELL

    config.vm.provision "docker"

    config.vm.provision "shell", inline: <<-SHELL
      sudo usermod -aG docker nomad
      sudo systemctl restart nomad
    SHELL

    config.trigger.after :up do |trigger|
      if RUBY_PLATFORM.include? "darwin"
        trigger.info = "Opening Nomad UI in Chrome"
        trigger.ruby do
          `sleep 4` # wait for nomad UI to be ready
          `if which open; then open -a "Google Chrome" http://localhost:4646; fi`
        end
      end
    end
  end